root = global ? window

root.mkCsv = (eid) ->
  exp = Experiments.findOne eid
  return null unless exp
  runs = getExpRuns(eid).fetch()

  data = getTableData(exp, runs, [], []);
  cols = colNames(runs);
  d2 = adjustData(data);
  console.log(data, d2);
  str = arrayToCsv(d2)

#  sids = ExpRuns.find({exp: eid}).map((r) ->_.map(r.samples,(v) -> v))
  sids = _.flatten(ExpRuns.find({exp: eid}).map((r) ->_.map(r.samples,(v) -> {sample: v, run: r._id})))

  s_str = arrayToCsv(
    _.map sids, (ss) ->
      s = Samples.findOne(ss.sample)
      if s then [s.name, s.run, s._id, moment(s.timestamp).format('M/D/YYYY'), s.note] else ['Error','',ss.sample,'','']
  )


  'Generated by https://labnote.meteor.com/' + '\r\n' +
  'Experiment,' + exp.name + ',' + moment(exp.date).format('M/D/YYYY') + '\r\n' +
  'Exported time,' + moment().format('M/D/YYYY HH:mm:ss') + '\r\n' +
  (if exp.locked then 'Experiment finished (data frozen)' else '') +
  '''
  Samples\r\n''' +
  s_str +
  '''\r\n
  'Steps\r\n''' +
  str

root.arrayToCsv = (xss) ->
  (_.map xss, (xs) ->
    (_.map xs, (x) ->
      innerValue = x?.toString() || ''
      result = innerValue.replace(/"/g, '""')
      if result.search /("|,|\n)/g >= 0
        result = '"' + result + '"'
      result).join(',') + '\r\n').join('')


# PDF export
root.mkPdf = (exp) ->
  doc = new jsPDF()

  doc.setFont("helvetica");
  doc.setFontType("bold");
  doc.setFontSize(20)
  doc.text(20, 20, exp.name);

  doc.setFont("helvetica");
  doc.setFontType("normal");
  doc.setFontSize(12)
  doc.text(20, 30, 'Date: ' + moment(exp.date).format('M/D/YYYY'));

  doc.setFont("helvetica");
  doc.setFontType("normal");
  doc.setFontSize(12)
  doc.text(20, 50, 'Samples');

  str = doc.output 'datauristring', {}
  window.open(str)


root.getSpreadsheetUrl = (id) -> 'https://drive.google.com/spreadsheets/d/' + id # + '/preview'

root.getGDriveFileUrl = (id) -> 'https://drive.google.com/file/d/' + id # + '/preview'

root.adjustData = (dat) ->
  console.log dat
  numcol = dat[0].length
  _.map dat, (row) ->
    if row.length == numcol then row else [''].concat row

root.dumpDBToGDrive = (callback) ->
  callback = callback || () -> {}
  console.log 'dumpDB...'
  Meteor.call 'getJSONOfWholeDB', (err,str) ->
    if !str
      callback({success: false})
      return
    Meteor.call 'getGoogle', (err,auth) ->
      console.log(auth)
      return unless auth

      contentType = 'text/plain'
      metadata =
        title: 'Labnotebook Database dump as of ' + moment().format('YYYY-MM-DD hh:mm:ss')
        mimeType: contentType
      boundary = '-------314159265358979323846';
      delimiter = "\r\n--" + boundary + "\r\n";
      close_delim = "\r\n--" + boundary + "--";

      Auth = 'Bearer ' + auth.accessToken;


      headers =
        'Content-Type': 'multipart/mixed; boundary="' + boundary + '"'
        Authorization: Auth

      multipartRequestBody =
        delimiter +
        'Content-Type: application/json\r\n\r\n' +
        JSON.stringify(metadata) +
        delimiter +
        'Content-Type: ' + contentType + '\r\n\r\n' +
        str + '\r\n' +
        close_delim;

#      console.log(multipartRequestBody,headers);

      req = gapi.client.request
        'path': '/upload/drive/v2/files'
        'method': 'POST'
        'params': {'uploadType': 'multipart'}
        'headers': headers
        'body': multipartRequestBody,
      req.execute (res) ->
          console.log res
          if res.id
            addLog
              type: 'database'
              op: 'dumpall'
              params:
                gdrive_id: res.id
            url = getGDriveFileUrl(res.id)
            callback {url: url,success:true, id:res.id}
          else
            callback {success: false, error: 'Insert failed.'}

